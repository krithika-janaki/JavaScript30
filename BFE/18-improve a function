/*
// Given an input of array, 
// which is made of items with >= 3 properties

let items = [
  {color: 'red', type: 'tv', age: 18}, 
  {color: 'silver', type: 'phone', age: 20},
  {color: 'blue', type: 'book', age: 17}
] 

// an exclude array made of key value pair
const excludes = [ 
  {k: 'color', v: 'silver'}, 
  {k: 'color', v: 'red'}, 
  ...
] 
*/

const { extGlobChars } = require("picomatch/lib/constants");

function improveFunction(exludes, items) {
  const excludesMap = {};

  for (let { k, v } of excludes) {
    if (!excludesMap[k]) {
      excludesMap[k] = { v: true };
    } else {
      excludesMap[k] = { ...excludesMap[k], v: true };
    }
  }

  items.filter((item) => {
    Object.keys(item).forEach((itemRow) => {
      return !excludesMap[itemRow] && !excludesMap[itemRow][item.value];
    });
  });
}
